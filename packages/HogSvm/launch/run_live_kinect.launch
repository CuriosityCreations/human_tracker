<launch>


  <arg name="classifierDir" default="Kinect"/>
  <arg name="replayRate" default="5.0"/>

  <!-- Launch the kinect for the data -->
  <include file="$(find kinect_data)/launch/kinect_data.launch"/> 


  <!-- Launch consisteny node because we need the ROIS-->
  <node pkg="consistency" type="consistency_node" name="consistency" output="screen">
	<param name="Q_Size" type="int" value="4" />
	<param name="RemoveOverlappingRois" type="bool" value="true" />
	<!-- mode = {accumulate,load} -->
	<param name="UseDefaultRois" type="bool" value="true" />
	<param name="mode" type="string" value="load"/>
	<param name="label" 	 type="int"    value="1"  />
        <param name="yaml_filename" value="$(env NIST_CLASSIFIERS)/$(arg classifierDir)/constraints.yml"/>
	<param name="max_training_samples" type="int" value="115"/>
	<remap from="input_rois" to="output_rois" />
	<remap from="Color_Image" to="/camera/rgb/image_color" />
	<remap from="Disparity_Image" to="/camera/depth/disparity" />
   </node>

  <!-- Launch HogSvm Node-->
  <node name="HogSvmNode" pkg="HogSvm" type="HogSvm1" output="screen">	
       <remap from="Color_Image" to="ConsistencyColorImage"/>	
       <remap from="Disparity_Image" to="ConsistencyDisparityImage"/>
       <remap from="input_rois" to="ConsistencyOutputRois"/>
       <!-- mode={detect,train,load,accumulate} -->
       <param name="mode" value="load"/>
       <param name="Hog_Block_File"  value="$(env NIST_CLASSIFIERS)/$(arg classifierDir)/Blocks.xml"/>
       <param name="classifier_file" value="$(env NIST_CLASSIFIERS)/$(arg classifierDir)/HogSvm.xml"/>
       <param name="HogSvmThreshold" value="1.0"/>
       <param name="num_Training_Samples" value="1000"/>
  </node> 

   <!-- display the rois -->
   <node pkg="roiViewer" type="roiViewer" name="roiViewer" >
        <param name="mode" type="string" value="roi_display"/> 
        <param name="label" type="int" value="1" />
	<remap from ="input_image" to="camera/rgb/image_color"/>
	<remap from ="input_rois" to="HogSvmOutputRois"/>  
   </node>

</launch>