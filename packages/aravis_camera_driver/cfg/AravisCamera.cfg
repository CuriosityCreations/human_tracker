#! /usr/bin/env python

PACKAGE='aravis_camera_driver'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

capture_enum = gen.enum( [gen.const("ExposureLimited",   str_t, "exposure_limited",   "Exposure limited capture rate"),
                          gen.const("FixedRate", str_t, "fixed", "Fixed capture rate")],
                          "Enum to set the capture mode." )

exposure_enum = gen.enum( [gen.const("AutoExposure",   str_t, "auto",   "Auto exposure"),
                           gen.const("AutoOnceExposure", str_t, "auto_once", "Auto once exposure"),
                           gen.const("FixedExposure", str_t, "fixed", "Fixed exposure")],
                          "Enum to set the exposure mode." )

gain_enum = gen.enum( [gen.const("AutoGain",   str_t, "auto",   "Auto gain"),
                       gen.const("AutoOnceGain", str_t, "auto_once", "Auto once gain"),
                       gen.const("FixedGain", str_t, "fixed", "Fixed gain")],
                      "Enum to set the gain mode." )

#capture = gen.add_group("Capture")
gen.add("caputure_mode", str_t, 0, "Capture mode", "exposure_limited", edit_method = capture_enum)
gen.add("frame_rate", int_t, 0, "Frame rate", 30, 1, 400)

#exposure = gen.add_group("Exposure")
gen.add("exposure_mode", str_t, 0, "Exposure mode", "auto", edit_method = exposure_enum)
gen.add("exposure", int_t, 0, "Exposure (us)", 1000, 1, 65520)

#gain = gen.add_group("Gain")
gen.add("gain_mode", str_t, 0, "Gain mode", "auto", edit_method = gain_enum)
gen.add("gain", int_t, 0, "Gain", 0, 0, 500)

exit(gen.generate(PACKAGE, "aravis_camera_node", "AravisCamera"))
