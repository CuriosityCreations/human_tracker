#! /usr/bin/env python

PACKAGE='aravis_camera_driver'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

capture_enum = gen.enum( [gen.const("Continuous",   str_t, "continuous",   "Continuous"),
                          gen.const("Triggered", str_t, "triggered", "Triggered")],
                          "Enum to set the capture mode." )
                          
trigger_source_enum = gen.enum( [gen.const("Line1",   str_t, "Line1",   "Line 1"),
                          gen.const("Line2", str_t, "Line2", "Line 2")],
                          "Enum to set the trigger source." )
                          
trigger_activation_enum = gen.enum( [gen.const("RisingEdge",   str_t, "RisingEdge",   "Rising edge"),
                          gen.const("FallingEdge", str_t, "FallingEdge", "Falling edge")],
                          "Enum to set the trigger activation." )
                          

exposure_enum = gen.enum( [gen.const("AutoExposure",   str_t, "auto",   "Auto exposure"),
                           gen.const("AutoOnceExposure", str_t, "auto_once", "Auto once exposure"),
                           gen.const("FixedExposure", str_t, "fixed", "Fixed exposure")],
                          "Enum to set the exposure mode." )

gain_enum = gen.enum( [gen.const("AutoGain",   str_t, "auto",   "Auto gain"),
                       gen.const("AutoOnceGain", str_t, "auto_once", "Auto once gain"),
                       gen.const("FixedGain", str_t, "fixed", "Fixed gain")],
                      "Enum to set the gain mode." )

#capture = gen.add_group("Capture")
gen.add("capture_mode", str_t, 0, "Capture mode", "continuous", edit_method = capture_enum)
gen.add("trigger_source", str_t, 0, "Trigger source", "Line1", edit_method = trigger_source_enum)
gen.add("trigger_activation", str_t, 0, "Trigger activation", "RisingEdge", edit_method = trigger_activation_enum)
gen.add("frame_rate", int_t, 0, "Frame rate", 30, 1, 400)

#exposure = gen.add_group("Exposure")
gen.add("exposure_auto", str_t, 0, "Exposure mode", "auto", edit_method = exposure_enum)
gen.add("exposure_time", int_t, 0, "Exposure (us)", 1000, 1, 65520)

#gain = gen.add_group("Gain")
gen.add("gain_mode", str_t, 0, "Gain mode", "auto", edit_method = gain_enum)
gen.add("gain", int_t, 0, "Gain", 0, 0, 500)

gen.add("auto_white_balance_once", bool_t, 0, "Auto white balance once", False)

gen.add("digital_shift", int_t, 0, "Digital shift", 0, 0, 4)

exit(gen.generate(PACKAGE, "basler_camera_node", "BaslerCamera"))
